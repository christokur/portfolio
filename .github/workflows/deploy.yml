name: Deploy Portfolio to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

#      - name: Checkout experience repo for data
#        uses: actions/checkout@v4
#        with:
#          repository: christokur/experience
#          path: ./experience-data
#          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

#      - name: Sync data from experience repo
#        run: |
#          # Copy data files from experience repo
#          mkdir -p data
#          cp ./experience-data/companies/las-vegas-sands/data/master-data.yaml ./data/
#          cp ./experience-data/companies/las-vegas-sands/data/timeline.json ./data/
#          cp ./experience-data/data/career-timeline.json ./data/
#          echo "✅ Data synchronized successfully"
#          ls -la data/

      - name: Build Remotion project
        run: |
          # Create output directory
          mkdir -p dist
          
          # Render the video as MP4 for video version
          npx remotion render Main dist/portfolio-video.mp4
          
          # Render static HTML version for web deployment  
          npx remotion render Main dist/index.html --sequence
          
          echo "✅ Build completed successfully"
          ls -la dist/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4